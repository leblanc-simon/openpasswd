<?php
/**
 * This file is part of the OpenPasswd package.
 *
 * (c) Simon Leblanc <contact@leblanc-simon.eu>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace OpenPasswd\Routing;

use Silex\Application;
use Silex\ControllerCollection;


/**
 * Module class
 *
 * @package     OpenPasswd\Routing
 * @version     1.0.0
 * @license     http://opensource.org/licenses/MIT  MIT
 * @author      Simon Leblanc <contact@leblanc-simon.eu>
 */
class Module
{
    /**
     * @var Application
     */
    private $app;

    /**
     * @var string
     */
    private $module;

    /**
     * @var string
     */
    private $classname;

    /**
     * @var string
     */
    private $default_route_name;

    /**
     * @var string
     */
    private $prefix_route;

    /**
     * @var ControllerCollection
     */
    private $controller;


    /**
     * Setup the Silex Application
     *
     * @param Application $app
     * @return $this
     */
    public function setApp(Application $app)
    {
        $this->app = $app;
        return $this;
    }


    /**
     * Set the module to use to generate the routing
     *
     * @param   string  $module     The Application classname
     * @return  $this
     */
    public function setModule($module)
    {
        $this->module = $module;
        $this->classname = '\\OpenPasswd\\Application\\'.$this->module;
        $this->default_route_name = strtolower($this->module);
        return $this;
    }


    /**
     * Set the prefix for all route generated by this class
     *
     * @param   string  $prefix_route
     * @return  $this
     */
    public function setPrefixRoute($prefix_route)
    {
        $this->prefix_route = $prefix_route;
        return $this;
    }


    /**
     * Generate the routing for a module
     */
    public function generateRouting()
    {
        $this->controller = $this->app['controllers_factory'];

        $this->buildList();
        $this->buildGet();
        $this->buildSearch();
        $this->buildSave();
        $this->buildDelete();

        $this->app->mount($this->prefix_route, $this->controller);
    }


    /**
     * Build the listing routing
     */
    private function buildList()
    {
        $this->controller->get('/', function() {
            $object = new $this->classname($this->app);
            return $object->listAction();
        })->bind($this->default_route_name);
    }


    /**
     * Build the get routing
     */
    private function buildGet()
    {
        $this->controller->get('/{slug}', function($slug) {
            $object = new $this->classname($this->app);
            return $object->getAction($slug);
        })->bind($this->default_route_name.'_get');
    }


    /**
     * Build the search routing
     */
    private function buildSearch()
    {
        $this->controller->get('/search/{search}', function($search) {
            $object = new $this->classname($this->app);
            return $object->searchAction($search);
        })->bind($this->default_route_name.'_search');
    }


    /**
     * Build the save routing
     */
    private function buildSave()
    {
        // Insert
        $this->controller->post('/', function() {
            $object = new $this->classname($this->app);
            return $object->saveAction();
        })->bind($this->default_route_name.'_add');

        // Update
        $this->controller->post('/{slug}', function($slug) {
            $object = new $this->classname($this->app);
            return $object->saveAction($slug);
        })->bind($this->default_route_name.'_update');
    }


    /**
     * Build the delete routing
     */
    private function buildDelete()
    {
        $this->controller->delete('/{slug}', function($slug) {
            $object = new $this->classname($this->app);
            return $object->deleteAction($slug);
        })->bind($this->default_route_name.'_delete');
    }
}